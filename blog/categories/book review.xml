<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[Eric Poe]]></title>
    <link href="http://ericpoe.com/blog/categories/book review.xml" rel="self"/>
    <link href="http://ericpoe.com/"/>
    <updated>2015-05-05T14:10:38-05:00</updated>
    <id>http://ericpoe.com/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[A Fresh Look At Javascript]]></title>
            <link href="http://ericpoe.com/blog/2014/04/07/a-fresh-look-at-javascript"/>
            <updated>2014-04-07T00:00:00-05:00</updated>
            <id>http://ericpoe.com/blog/2014/04/07/a-fresh-look-at-javascript</id>
            <content type="html"><![CDATA[<p>After studying <a href="https://www.dartlang.org/">Dart</a> for a month, I wondered which problems Dart was attempting to resolve. I then realized that my knowledge of JavaScript was not good enough to know why Google had created Dart as a JavaScript alternative. As much as I enjoyed Dart, I decided to dive back in to JavaScript with a fresh look.</p>

<p>A programmer I respect, the inimitable <a href="http://johnkary.net/">John Kary</a>, recommended that I read <a href="http://shop.oreilly.com/product/9780596517748.do">JavaScript: the Good Parts</a> by Douglas Crockford for a different project. Although the book was published nearly 4 years ago, it seems very relevant today. It has me thinking about JavaScript in new ways.</p>

<p>I appreciate that the author does not mince words in regards to the downsides of JavaScript. It is not a perfect language, but which language has achieved perfection? Crockford makes a few suggestions on how to get around or side-step some of the drawbacks of JavaScript.</p>

<p>After reading this book, I realize that JavaScript still deserves a deeper dive. I look forward to the swim.</p>
]]></content>
        </entry>
    </feed>